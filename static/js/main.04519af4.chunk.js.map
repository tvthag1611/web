{"version":3,"sources":["components/TaskForm.js","components/TaskItem.js","components/TaskList.js","components/Search.js","components/Sort.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","hiddenFormTrue","statusForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","portant","id","this","task","Number","nextProps","className","role","type","onClick","Component","TaskItem","onUpdatePortant","deleteTask","editForm","show","index","scope","aria-label","TaskList","onFilter","filterName","filterPortant","tasks","eleTasks","map","key","placeholder","Search","onSearch","keyword","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Control","App","showTaskForm","isDisplayForm","taskEditing","hiddenForm","showForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","splice","result","forEach","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","showtf","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04519af4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id : '',\r\n      name : '',\r\n      portant: 0\r\n    };  \r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.task) {\r\n      this.setState({\r\n        id : this.props.task.id,\r\n        name : this.props.task.name,\r\n        portant : Number(this.props.task.portant)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps && nextProps.task) {\r\n      this.setState({\r\n        id : nextProps.task.id,\r\n        name : nextProps.task.name,\r\n        portant : Number(nextProps.task.portant)\r\n      });\r\n    }\r\n    else if (nextProps && nextProps.task === null) {\r\n      this.setState({\r\n        id : '',\r\n        name : '',\r\n        portant : 0\r\n      });\r\n    }\r\n  }\r\n\r\n  hiddenFormTrue = () => {\r\n    this.props.statusForm();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.onClear();\r\n    this.hiddenFormTrue();\r\n  }\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name : '',\r\n      portant: 0\r\n    });  \r\n  }\r\n\r\n  render() {\r\n    var { id } = this.state;\r\n    return (\r\n        <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n          <button type=\"button\" className=\"close\"\r\n            onClick = {this.hiddenFormTrue}\r\n          >&times;</button>\r\n          <strong>{ id !== '' ? 'Chỉnh sửa công việc' : 'Thêm công việc mới'}</strong>\r\n          <form className=\"add_new\" onSubmit={this.onSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"row\">\r\n                <span className=\"label label-default\">Việc mới:</span><br />\r\n                <input type=\"text\" className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange = {this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"row\">\r\n              <span className=\"label label-default\">Mức độ cần thiết:</span><br />\r\n                <select className=\"custom-select\"\r\n                  name=\"portant\"\r\n                  value={this.state.portant}\r\n                  onChange = {this.onChange}\r\n                >\r\n                  <option value={0}>Làm ngay</option>\r\n                  <option value={1}>Chưa cần làm ngay</option>\r\n                  <option value={2}>Làm thì tốt mà không làm cũng chả sao</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"row btn_add\">\r\n                <button type=\"submit\" className=\"btn btn-warning\"><i className=\"fas fa-plus\"></i> Lưu lại</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>\r\n                <i className=\"fas fa-times\"></i> Hủy bỏ</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component{\r\n\r\n  onUpdatePortant = () => {\r\n    this.props.onUpdatePortant(this.props.task.id);\r\n  }\r\n\r\n  deleteTask = () => {\r\n    this.props.deleteTask(this.props.task.id);\r\n  }\r\n\r\n  editForm = () => {\r\n    this.props.editForm(this.props.task.id);\r\n  }\r\n\r\n  render() {\r\n    var { task, index } = this.props;\r\n    var show;\r\n    if (Number(task.portant) === 0) {\r\n        show = 'Làm ngay';\r\n    }\r\n    else if (Number(task.portant) === 1) {\r\n      show = 'Chưa cần làm ngay';\r\n    }\r\n    else if (Number(task.portant) === 2) { \r\n      show = 'Làm thì tốt mà không làm cũng chả sao';\r\n    }\r\n    function showColor() {\r\n      if (Number(task.portant) === 0) {\r\n        return 'badge badge-pill badge-danger';\r\n      }\r\n      else if (Number(task.portant) === 1) {\r\n        return 'badge badge-pill badge-warning';\r\n      }\r\n      else if (Number(task.portant) === 2) { \r\n        return 'badge badge-pill badge-primary';\r\n      }\r\n    }\r\n    return (\r\n        <tr>\r\n          <th scope=\"row\">{index+1}</th>\r\n          <td>{task.name}</td>\r\n          <td>\r\n            <span className={ showColor() }\r\n                  onClick = {this.onUpdatePortant}\r\n            >{show}</span>\r\n          </td>\r\n          <td>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n              <button type=\"button\" className=\"btn btn-warning\"\r\n                onClick = {this.editForm}\r\n              ><i className=\"fas fa-pen\"></i> Sửa</button>\r\n              <button type=\"button\" className=\"btn btn-danger\"\r\n                onClick = {this.deleteTask}\r\n              ><i className=\"fas fa-trash-alt\"></i> Xóa</button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem.js';\r\n\r\nclass TaskList extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName : '',\r\n      filterPortant : 3\r\n    };  \r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.props.onFilter(\r\n      name === \"filterName\" ? value : this.state.filterName,\r\n      name === \"filterPortant\" ? value : this.state.filterPortant\r\n    )\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    var { tasks } = this.props;\r\n    var { filterName, filterPortant } = this.state;\r\n    var eleTasks = tasks.map((task,index) => {\r\n      return <TaskItem key={ task.id } index = { index } task = { task }\r\n        onUpdatePortant = {this.props.onUpdatePortant}\r\n        deleteTask = {this.props.deleteTask}\r\n        editForm = {this.props.editForm}\r\n      />;\r\n    }); \r\n    return (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover\">\r\n            <caption>Danh sách công việc</caption>\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"\">STT</th>\r\n                <th scope=\"col\">Công việc</th>\r\n                <th scope=\"col\">Mức độ quan trọng</th>\r\n                <th scope=\"col\">Hành động</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\"></th>\r\n                <td>\r\n                  <input type=\"text\" placeholder=\"Lọc\" className=\"form-control\"\r\n                        name = \"filterName\"\r\n                        value = {filterName}\r\n                        onChange = { this.onChange }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select className=\"custom-select\"\r\n                          name = \"filterPortant\"\r\n                          value = {filterPortant}\r\n                          onChange = { this.onChange }\r\n                  >\r\n                    <option value={3}>Tất cả</option>\r\n                    <option value={0}>Làm ngay</option>\r\n                    <option value={1}>Chưa cần làm ngay</option>\r\n                    <option value={2}>Làm thì tốt mà không làm cũng chả sao</option>\r\n                  </select>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n              { eleTasks }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword : ''\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState ({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Search\"\r\n                name = \"keyword\"\r\n                value={this.state.keyword}\r\n                onChange = {this.onChange}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-primary\" type=\"button\"\r\n                    onClick = {this.onSearch}\r\n            ><i className=\"fas fa-search\"></i></button>  \r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component{\r\n\r\n  onClick = (sortBy, sortValue) => {\r\n    this.props.onSort(sortBy, sortValue);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"dropdown\">\r\n          <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Sắp xếp\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <button className={this.props.sortBy === 'name' && this.props.sortValue === 1 ? 'dropdown-item sort_selected'\r\n              : 'dropdown-item'}\r\n                onClick = {() => this.onClick('name', 1)}\r\n            >Từ A <i className=\"fas fa-arrow-right\"></i> Z</button>\r\n            <button className={this.props.sortBy === 'name' && this.props.sortValue === -1 ? 'dropdown-item sort_selected'\r\n              : 'dropdown-item'}\r\n                onClick = {() => this.onClick('name', -1)}\r\n            >Từ Z <i className=\"fas fa-arrow-right\"></i> A</button>\r\n            <button className={this.props.sortBy === 'portant' && this.props.sortValue === 1 ? 'dropdown-item sort_selected'\r\n              : 'dropdown-item'}\r\n                onClick = {() => this.onClick('portant', 1)}\r\n            >Theo mức độ quan trọng</button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search.js';\r\nimport Sort from './Sort.js';\r\n\r\nclass Control extends Component{\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n            <Search onSearch = {this.props.onSearch}/>\r\n          </div>\r\n          <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n            <Sort onSort = {this.props.onSort}\r\n                  sortBy = {this.props.sortBy}\r\n                  sortValue = {this.props.sortValue}\r\n            />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm.js';\nimport TaskList from './components/TaskList.js';\nimport Control from './components/Control.js';\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks : [],\n      isDisplayForm : false,\n      taskEditing : null,\n      filter : {\n        name : '',\n        portant : 3\n      },\n      keyword : '',\n      sortBy : 'name',\n      sortValue : 0\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks : tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4()\n    + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  showTaskForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplayForm : true,\n        taskEditing : null\n      });\n    }\n    else {\n      this.setState({\n        isDisplayForm : !this.state.isDisplayForm,\n        taskEditing : null\n      });\n    }\n  }\n\n  hiddenForm = () => {\n    this.setState({\n      isDisplayForm : false\n    });\n  }\n\n  showForm = () => {\n    this.setState({\n      isDisplayForm : true\n    });\n  }\n\n  onSubmit = (data) => {\n    var {tasks} = this.state;\n    if (data.id === '') {\n      data.id = this.generateID();\n      tasks.push(data);\n    }\n    else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks : tasks,\n      taskEditing : null\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n\n  onUpdatePortant = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].portant = Number(tasks[index].portant);\n      tasks[index].portant = tasks[index].portant+1;\n      if (tasks[index].portant > 2) {\n        tasks[index].portant = 0;\n      }\n      this.setState({\n        tasks : tasks\n      });\n      localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n  }\n\n  deleteTask = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks : tasks\n      });\n      localStorage.setItem('tasks',JSON.stringify(tasks));\n      this.hiddenForm();\n    }\n  }\n\n  editForm = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing : taskEditing\n    });\n    this.showForm();\n  }\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result=-1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  }\n\n  onFilter = (filterName, filterPortant) => {\n    filterPortant = Number(filterPortant);\n    this.setState({\n      filter : {\n        name : filterName.toLowerCase(),\n        portant : filterPortant\n      }\n    });\n  }\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword : keyword\n    });\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy : sortBy,\n      sortValue : sortValue\n    });\n  }\n\n  render() {\n    var {tasks, isDisplayForm, filter, keyword, sortBy, sortValue} = this.state;\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.portant === 3) {\n          return task;\n        }\n        else return task.portant === filter.portant;\n      });\n    }\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks.sort((a,b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    }\n    else {\n      tasks.sort((a,b) => {\n        if (a.portant > b.portant) return sortValue;\n        else if (a.portant < b.portant) return -sortValue;\n        else return 0;\n      });\n    }\n\n    var showtf = isDisplayForm \n    ? <TaskForm onSubmit={this.onSubmit}\n                statusForm = { this.hiddenForm }\n                task = {this.state.taskEditing}\n                /> \n    : '';\n    return (\n        <div className=\"container\">\n          {/*tieu de*/}\n          <h1>\n            QUẢN LÝ CÔNG VIỆC\n            <small className=\"text-muted\">tvthag</small><hr />\n          </h1>\n          {/*--------------------*/}\n          <div className=\"row\">\n            <div className={isDisplayForm ? 'col-lg-4 col-md-4 col-sm-4' : ''}>\n            {/*them cong viec*/}\n              {showtf}\n            {/*--------------------*/}\n            </div>\n            <div className={isDisplayForm ? 'col-lg-8 col-md-8 col-sm-8' : 'col-lg-12 col-md-12 col-sm-12'}>\n              {/*nut them cong viec*/}\n              <button type=\"button\" className=\"btn btn-primary btn_open\"\n                onClick = {this.showTaskForm}\n              >\n                <i className=\"fas fa-plus\"></i> Thêm công việc \n              </button>\n              {/*search va sort*/}\n              <Control onSearch = {this.onSearch}\n                        onSort = {this.onSort}\n                        sortBy = {sortBy}\n                        sortValue ={sortValue}\n              />\n              {/*------------------------*/}\n              <TaskList tasks = { tasks } onUpdatePortant = {this.onUpdatePortant}\n                                          deleteTask = {this.deleteTask}\n                                          editForm = {this.editForm}\n                                          onFilter = {this.onFilter}\n              />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}